import time
import streamlit as st
import pandas as pd

from datetime import datetime, timedelta
from streamlit_option_menu import option_menu
import streamlit.components.v1 as components
import config_ini
from ts_db import Teo_DB

from utils import utils

######### Read Config.ini #########
path = "config.ini"
    # font = get_setting(path, 'Settings', 'font')
    # font_size = get_setting(path, 'Settings', 'font_size')
    
    # update_setting(path, "Settings", "font_size", "12")
    # delete_setting(path, "Settings", "font_style")

PATH_DB = config_ini.get_setting(path, 'db_local', 'PATH_DB')
NAME_DB = config_ini.get_setting(path, 'db_local', 'NAME_DB')
try:
    tsdb = Teo_DB(PATH_DB+NAME_DB)
    print ('Connection - Ok')
except Exception as e:
    print (f'Error {e}')


######### TimeSheets #########
def timesheets_create():
    st.subheader('–¢–∞–±–µ–ª—å')
    choose = st.sidebar.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª –õ–£',
                        ('–õ–æ–≥–∏—Å—Ç–∏–∫–∞', '–ú–µ–∑–æ–Ω–∏–Ω', '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–π'))
    if st.sidebar.button('–ü–æ–∫–∞–∑–∞—Ç—å') == True:
        components.html(utils.draw_table(), height=300, scrolling=True)

######### Acts ##########
def acts_create():
    st.subheader('–ê–∫—Ç—ã –Ω–∞–µ–º–Ω—ã—Ö –≤–æ–¥–∏—Ç–µ–ª–µ–π')
    placeholder = st.empty()
    time.sleep(5)
    # Replace the placeholder with some text:
    placeholder.text("Hello")
    time.sleep(5)
    # Replace the text with a chart:
    placeholder.line_chart({"data": [1, 5, 2, 6]})
    time.sleep(5)
    # Replace the chart with several elements:
    with placeholder.container():
        st.write("This is one element")
        st.write("This is another")
    time.sleep(5)
    # Clear all those elements:
    placeholder.empty()

######### Trips ############
def trips_create():

    
    route_flag = False
    route_flag_Minsk = False
    
    st.subheader('–†–µ–π—Å—ã')
    trip_date = st.sidebar.date_input('–î–∞—Ç–∞ —Ä–µ–π—Å–∞', datetime.now()+timedelta(days=1))

    trip_check_town = st.sidebar.checkbox('–ö–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∞')
    trip_town = '–ú–∏–Ω—Å–∫'
    if trip_check_town:
        trip_town = st.sidebar.text_input('–ú–∞—Ä—à—Ä—É—Ç', placeholder='–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª')
        trip_days = st.sidebar.slider(
            '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏',
            1, 3, (1))
    else:
        trip_town = '–ú–∏–Ω—Å–∫'
        trip_days = 1
    trip_check_our = st.sidebar.checkbox('–ù–∞–µ–º–Ω—ã–π')
    
    trip_driver = st.sidebar.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–¥–∏—Ç–µ–ª—è', tsdb.get_name(trip_check_our, '–≤–æ–¥–∏—Ç–µ–ª—å'))
    trip_car = st.sidebar.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—à–∏–Ω—É', tsdb.get_number_car(trip_check_our, trip_driver)[0], index=tsdb.get_number_car(trip_check_our, trip_driver)[1])
    trip_route = 0
    trip_forwarder = 0
    trip_route = st.sidebar.number_input('–ù–æ–º–µ—Ä –ø—É—Ç–µ–≤–æ–≥–æ', format="%d", value=int(tsdb.get_last_route())+1, disabled=trip_check_our)
    trip_check_forwarder = st.sidebar.checkbox('–≠–∫—Å–ø–µ–¥–∏—Ç–æ—Ä', disabled=trip_check_our)
    if trip_check_forwarder:
        trip_forwarder = st.sidebar.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ —ç–∫—Å–ø–µ–¥–∏—Ç–æ—Ä–∞', tsdb.get_name(trip_check_our, '—ç–∫—Å–ø–µ–¥–∏—Ç–æ—Ä'))
        trip_forwarder = tsdb.get_id_emplyee(trip_forwarder)
    
    if st.sidebar.button('–î–æ–±–∞–≤–∏—Ç—å'):
        tsdb.add_trips(trip_route, trip_date, tsdb.get_id_emplyee(trip_driver), trip_days, trip_town, tsdb.get_id_car(trip_car), trip_check_our, trip_forwarder)
        if trip_town == '–ú–∏–Ω—Å–∫':
            route_flag_Minsk = True
        else:
            route_flag = True
    st.text(f'–ö–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏ –Ω–∞ : {trip_date}')
    table_trips = st.empty()
    table_trips.table(tsdb.get_trips_of_date(trip_date, False))

    if st.button('–£–≤–µ–¥–æ–º–µ–Ω–∏–µ', disabled=tsdb.get_status_message(trip_date, False)):
        st.text('Send')

    st.text(f'–ú–∏–Ω—Å–∫ –Ω–∞ : {trip_date}')
    table_trips = st.empty()
    table_trips.table(tsdb.get_trips_of_date(trip_date, True))
    
    if st.button('–£–≤–µ–¥–æ–º–µ–Ω–∏–µ –ø–æ –ú–∏–Ω—Å–∫—É', disabled=tsdb.get_status_message(trip_date, True)):
        st.text('Send')

st.set_page_config(
    page_title='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞',
    page_icon="üßä",
    layout="wide")
     
st.title('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞')
st.text(f'–°–µ–≥–æ–¥–Ω—è {str(datetime.now())}')

selected = option_menu(
    menu_title='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
    options=['–¢–∞–±–µ–ª—å', '–ö–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏', '–ê–∫—Ç—ã', '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'],
    icons=['calendar-range', 'alarm', 'card-checklist', 'tools'],
    orientation='horizontal',
    default_index=0,
    )

if selected == '–¢–∞–±–µ–ª—å':
    timesheets_create()
if selected == '–ö–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏':
    trips_create()
if selected == '–ê–∫—Ç—ã':
    acts_create()



